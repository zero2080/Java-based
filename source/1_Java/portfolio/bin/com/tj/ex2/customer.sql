DROP TABLE CUSTOMER CASCADE CONSTRAINTS;
DROP TABLE CUS_LEVEL;
CREATE TABLE CUS_LEVEL(
    LEVELNO NUMBER(1,0),
    LEVELNAME VARCHAR2(20) NOT NULL,
    LOW NUMBER(10,0) NOT NULL,
    HIGH NUMBER(10,0) NOT NULL,
    PRIMARY KEY(LEVELNO));
INSERT INTO CUS_LEVEL VALUES (1, 'NORMAL', 0, 999999);
INSERT INTO CUS_LEVEL VALUES (2, 'SILVER', 1000000, 1999999);
INSERT INTO CUS_LEVEL VALUES (3, 'GOLD', 2000000, 2999999);
INSERT INTO CUS_LEVEL VALUES (4, 'VIP', 3000000, 3999999);
INSERT INTO CUS_LEVEL VALUES (5, 'VVIP', 4000000, 9999999999);
CREATE TABLE CUSTOMER(
    CID NUMBER(5,0),
    CTEL VARCHAR2(30) NOT NULL,
    CNAME VARCHAR2(50) NOT NULL,
    CPOINT NUMBER(10,0) DEFAULT 1000 NOT NULL,
    CAMOUNT NUMBER(10,0) DEFAULT 0 NOT NULL,
    LEVELNO NUMBER(10,0) DEFAULT 1,
    PRIMARY KEY(CID),
    FOREIGN KEY(LEVELNO) REFERENCES CUS_LEVEL(LEVELNO));
DROP SEQUENCE CUSTOMER_SEQ;
CREATE SEQUENCE CUSTOMER_SEQ MAXVALUE 99999 NOCYCLE NOCACHE;

SELECT * FROM CUS_LEVEL;

-- 0. 회원레벨명들 출력
SELECT LEVELNAME FROM CUS_LEVEL;

--1. 폰4자리(FULL) 검색
 -- CTEL, CNAME, CPOINT, CAMOUNT, LEVENO, LEVELNAME, LOW, HIGH, 레벨업을 위해 쓸 돈
SELECT C.*, LEVELNAME, LOW, HIGH, HIGH-CAMOUNT+1 FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO;

SELECT C.*, LEVELNAME, LOW, HIGH, 
        (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO<>5) LEVELUP 
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO;
    
SELECT C.*, LEVELNAME, LOW, HIGH, 
        (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO<>5) LEVELUP 
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO AND CTEL LIKE '%9999';
    
SELECT C.*, LEVELNAME, 
        (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO<>5) LEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO AND CTEL LIKE '%'||'9999'; -- ★
    
SELECT C.*, LEVELNAME, LOW, HIGH, 
       (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO<>5) LEVELUP 
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO AND CTEL LIKE '%'||'010-9999-9999';-- ★
    
-- 2. 고객이름 검색
SELECT C.*, LEVELNAME, 
        (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO<>5) LEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO AND CNAME='홍길동';-- ★
    
-- 3. 포인트로만 구매
UPDATE CUSTOMER SET CPOINT=CPOINT-1000 
    WHERE CTEL='010-8888-8888' AND CPOINT>=1000;
    
UPDATE CUSTOMER SET CPOINT=CPOINT-1000 
    WHERE CTEL='010-8888-8888';-- ★
    
-- 4. 물품구매
UPDATE CUSTOMER SET CPOINT=CPOINT+1000000*0.05, CAMOUNT=CAMOUNT+1000000 
    WHERE CTEL='010-8888-8888'; -- ★ 누적금액과 누적포인트 수정
    
SELECT L.LEVELNO FROM CUSTOMER C, CUS_LEVEL L
    WHERE camount BETWEEN LOW AND HIGH AND CTEL='010-8888-8888'; -- 레벨업이 필요한지 안 필요한지

UPDATE CUSTOMER SET LEVELNO=(SELECT L.LEVELNO FROM CUSTOMER C, CUS_LEVEL L 
                       WHERE CAMOUNT BETWEEN LOW AND HIGH AND CTEL='010-8888-8888')
            WHERE CTEL='010-8888-8888';-- ★ 레벨조정
COMMIT;
-- 5. 등급별 출력
SELECT C.*, LEVELNAME, 
        (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO<>5) LEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO AND LEVELNAME='VVIP' ORDER BY CAMOUNT DESC;-- ★
    
-- 6. 전체출력
SELECT C.*, LEVELNAME, 
        (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO<>5) LEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO;-- ★
    
-- 7. 회원가입
INSERT INTO CUSTOMER (CID, CTEL, CNAME) 
    VALUES (CUSTOMER_SEQ.NEXTVAL, '010-9999-9999','홍길동');-- ★
    
INSERT INTO CUSTOMER (CID, CTEL, CNAME) 
    VALUES (CUSTOMER_SEQ.NEXTVAL, '010-8888-8888','홍길순');
    
-- 8. 번호수정
UPDATE CUSTOMER SET CTEL='010-9999-9999' WHERE CNAME='홍길동';-- ★

SELECT * FROM CUSTOMER;

-- 9. 회원탈퇴
DELETE CUSTOMER WHERE CTEL='010-9999-9999';-- ★
COMMIT;