-- JOIN
-- ★ 1.Join의 필요성
SELECT * FROM EMP WHERE ENAME='SMITH';
SELECT * FROM DEPT;
SELECT * FROM SALGRADE;
-- ★ 2. cross join
SELECT * FROM EMP; -- 14 ROW (8필드)
SELECT * FROM DEPT; -- 4 ROW (3필드)
SELECT * FROM EMP, DEPT; -- 14*4(56) ROW (8+3=11필드)
-- ★ 3. Equi join(동등조인)
SELECT * FROM EMP, DEPT WHERE EMP.DEPTNO=DEPT.DEPTNO;
SELECT EMP.*, DNAME, LOC FROM EMP, DEPT WHERE EMP.DEPTNO=DEPT.DEPTNO;
SELECT E.*, DNAME, LOC FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO;
SELECT ENAME, MGR, HIREDATE, D.DEPTNO, DNAME, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO;
    -- 이름, MGR, HIREDATE, DEPTNO, DNAME, LOC
SELECT ENAME, DNAME, LOC FROM EMP E, DEPT D 
    WHERE E.DEPTNO=D.DEPTNO AND ENAME='SCOTT';
    -- 'SCOTT' 이름, 부서명, 근무지
SELECT EMPNO, ENAME, SAL, E.DEPTNO, DNAME FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO;
    -- 사번, 이름, 급여, 부서코드, 부서명
SELECT ENAME, JOB, SAL, DNAME, LOC FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND SAL>=2000
    ORDER BY SAL;
    -- 이름, JOB, 급여, 부서명, 근무지 (급여가 2000이상직원 급여순으로 정렬)
SELECT ENAME, JOB, DNAME, LOC FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND LOC='CHICAGO';
    -- 'CHICAGO'에 근무하는 직원의 이름, 업무, 부서명, 근무지를 출력
SELECT ENAME, JOB, LOC FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND E.DEPTNO IN (10,20)
    ORDER BY SAL;
    -- 이름, 업무, 근무지 (부서번호가 10이거나 20인 직원만 급여순) 출력
SELECT ENAME, SAL, COMM, (SAL+NVL(COMM,0))*12 연봉, DNAME, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO;
    -- 이름, 급여, COMM, 연봉(별칭), 부서명, 근무지 출력, 연봉=(급여+COMM)*12.
SELECT ENAME, SAL, COMM, (SAL+NVL(COMM, 0))*12 연봉, DNAME, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND (JOB='SALESMAN' OR JOB='MANAGER') 
    ORDER BY 연봉 DESC;
SELECT ENAME, SAL, COMM, (SAL+NVL(COMM, 0))*12 연봉, DNAME, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND JOB IN ('SALESMAN', 'MANAGER') 
    ORDER BY 연봉 DESC;
    -- 위의 예제에다가 JOB이 'SALESMAN'또는 'MANAGER' 만 출력하고 연봉이 큰 순으로 정렬
SELECT ENAME, SAL, HIREDATE, E.DEPTNO, DNAME
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND COMM IS NULL AND SAL>=1200
    ORDER BY DNAME, SAL DESC;
    -- 이름, 급여, 입사일, 부서코드, 부서명.
        --(조건: COMM이 NULL이고 급여 1200이상. 부서명순 정렬. 같은 부서명은 급여큰순)
        
--탄탄1.	뉴욕(NEW YORK)에서 근무하는 사원의 이름과 급여를 출력하시오
SELECT ENAME, SAL FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO AND LOC='NEW YORK';
--탄탄2.	ACCOUNTING 부서 소속 사원의 이름과 입사일을 출력하시오
SELECT ENAME, 
    TO_CHAR(HIREDATE, 'YYYY"년" MM"월" DD"일" HH"시" MI"분"SS"초"') HIREDATE 
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND DNAME='ACCOUNTING';
--탄탄3.	직급이 MANAGER인 사원의 이름, 부서명을 출력하시오
SELECT ENAME, DNAME FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO AND JOB='MANAGER';
--탄탄4.	Comm이 null이 아닌 사원의 이름, 급여, 부서코드, 근무지를 출력하시오.
SELECT ENAME, TO_CHAR(SAL, '$9,999'), E.DEPTNO, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND COMM IS NOT NULL;
-- ★ 4. NON-Equi join
SELECT * FROM EMP WHERE ENAME='ALLEN';
SELECT * FROM SALGRADE;
SELECT * FROM EMP, SALGRADE WHERE SAL BETWEEN LOSAL AND HISAL;
SELECT ENAME, SAL, GRADE FROM EMP, SALGRADE WHERE SAL BETWEEN LOSAL AND HISAL
    ORDER BY GRADE, ENAME;
    -- 이름, 급여, 등급을 출력(등급순으로 정렬, 이름순)
    
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO, GRADE||'등급' GRADE
    FROM EMP, SALGRADE
    WHERE SAL BETWEEN LOSAL AND HISAL;
SELECT E.*, GRADE||'등급' GRADE
    FROM EMP E, SALGRADE
    WHERE SAL BETWEEN LOSAL AND HISAL;
    -- 사번, 이름, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO, x등급, 
--탄탄1. Comm이 null이 아닌 사원의 이름, 급여, 등급, 부서이름, 근무지를 출력하시오.
SELECT ENAME, SAL, GRADE, DNAME, LOC
    FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO -- EQUI JOIN
        AND SAL BETWEEN LOSAL AND HISAL -- NON-EQUI JOIN
        AND COMM IS NOT NULL;
--탄탄2. 이름, 급여, 입사일, 급여등급
SELECT ENAME, SAL, HIREDATE, GRADE FROM EMP, SALGRADE 
    WHERE SAL BETWEEN LOSAL AND HISAL;
--탄탄3.	이름, 급여, 입사일, 급여등급, 부서명, 근무지
SELECT ENAME, SAL, HIREDATE, GRADE, DNAME, LOC
    FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL;
--탄탄4.	이름, 급여, 등급, 부서코드, 근무지. 단 comm 이 null아닌 경우
SELECT ENAME, SAL, GRADE, E.DEPTNO, LOC
    FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL
        AND COMM IS NOT NULL;
--탄탄5.	이름, 급여, 급여등급, 연봉, 부서명, 부서순 출력, 부서가 같으면 연봉순. 
        --연봉=(sal+comm)*12 comm이 null이면 0
SELECT ENAME, SAL, GRADE, (SAL+NVL(COMM,0))*12 연봉, DNAME
    FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL
    ORDER BY DNAME, 연봉;
    
--탄탄6.	이름, JOB, 급여, 등급, 부서코드, 부서명 출력. 급여가 1000~3000사이. 
        --정렬조건 : 부서별, 부서같으면 업무별, 업무같으면 급여 큰순
SELECT ENAME, JOB, SAL, GRADE, E.DEPTNO, DNAME
    FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL
        AND SAL BETWEEN 1000 AND 3000
    ORDER BY E.DEPTNO, JOB, SAL DESC;
--탄탄7.	이름, 급여, 등급, 입사일, 근무지. 81년에 입사한 사람. 등급 큰순
SELECT ENAME, SAL, GRADE, HIREDATE, LOC
    FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL
        AND HIREDATE LIKE '81%'
    ORDER BY GRADE DESC;
SELECT ENAME, SAL, GRADE, HIREDATE, LOC
    FROM EMP E, DEPT D, SALGRADE
    WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL
        AND TO_CHAR(HIREDATE,'YY')='81'
    ORDER BY GRADE DESC;
-- ★ 5. self join
SELECT W.EMPNO, W.ENAME, W.MGR, M.EMPNO, M.ENAME FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO;
SELECT W.ENAME || '의 상사는 ' || M.ENAME || '다' TITLE
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO;
    -- xx의 상사는 xx다
SELECT W.EMPNO, W.ENAME, W.JOB, M.ENAME "상사이름", W.HIREDATE, W.SAL, W.COMM
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO;
    -- 사번, 이름, JOB, 상사이름, HIREDATE, SAL, COMM
SELECT W.EMPNO, W.ENAME, W.JOB, M.ENAME, W.HIREDATE, W.SAL, W.COMM, DNAME
    FROM EMP W, EMP M, DEPT D
    WHERE W.MGR=M.EMPNO AND W.DEPTNO=D.DEPTNO;
    -- 사번, 이름, JOB, 상사이름, HIREDATE, SAL, COMM, 부서번호대신 부서명
    
--탄탄1.	상사가 KING인 사원들의 이름과 JOB(직급)을 출력하시오
SELECT W.ENAME, W.JOB, W.MGR, M.EMPNO, M.ENAME
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO AND M.ENAME='KING';
SELECT W.ENAME, W.JOB
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO AND M.ENAME='KING';    
--탄탄2. SCOTT과 동일한 부서번호(DEPTNO)에서 근무하는 사원의 이름을 출력하시오
SELECT E1.ENAME, E1.DEPTNO, E2.DEPTNO, E2.ENAME
    FROM EMP E1, EMP E2
    WHERE E1.ENAME='SCOTT' AND E1.DEPTNO=E2.DEPTNO;
SELECT E2.ENAME FROM EMP E1, EMP E2 
    WHERE E1.DEPTNO=E2.DEPTNO AND E1.ENAME='SCOTT' AND E2.ENAME<>'SCOTT';
--탄탄3. SCOTT과 동일한 근무지(LOC)에서 근무하는 사원의 이름을 출력하시오
SELECT E2.ENAME
    FROM EMP E1, DEPT D, EMP E2
    WHERE E1.DEPTNO=D.DEPTNO AND D.DEPTNO=E2.DEPTNO 
        AND E1.ENAME='SCOTT' AND E2.ENAME<>'SCOTT';
 -- ①50부서, DALLAS 입력 -> ②EMP테이블에 50부서 직원 입력 -> ③탄탄3 -> ④데이터원상복귀
 -- ①
 DESC DEPT;
 INSERT INTO DEPT VALUES (50, 'IT', 'DALLAS');
 SELECT * FROM DEPT;
 -- ②
 DESC EMP;
 INSERT INTO EMP VALUES (9999,'KIM',NULL,NULL,NULL,NULL,NULL,50);
 SELECT * FROM EMP;
 --③ 'SCOTT'과 같은 LOC에서 근무하는 사람이름
 SELECT E1.ENAME, D1.LOC, E2.ENAME, D2.LOC
    FROM EMP E1, EMP E2, DEPT D1, DEPT D2
    WHERE E1.ENAME='SCOTT'
        AND E1.DEPTNO=D1.DEPTNO AND E2.DEPTNO=D2.DEPTNO
        AND D1.LOC=D2.LOC;
  SELECT E2.ENAME
    FROM EMP E1, EMP E2, DEPT D1, DEPT D2
    WHERE E1.ENAME='SCOTT' AND E2.ENAME<>'SCOTT'
        AND E1.DEPTNO=D1.DEPTNO AND E2.DEPTNO=D2.DEPTNO
        AND D1.LOC=D2.LOC;
 --④ 원상복귀(50번 입력,50번 부서사원입력 취소)
 ROLLBACK;
 SELECT * FROM DEPT;
 SELECT * FROM EMP;
 
-- ★ 6. outer join
SELECT D.DEPTNO, DNAME, ENAME FROM DEPT D, EMP E WHERE D.DEPTNO=E.DEPTNO;
SELECT * FROM EMP;
SELECT * FROM DEPT;
SELECT W.ENAME "부하", NVL(M.ENAME,'없음') "상사"
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO(+);

SELECT W.ENAME "부하", NVL(M.ENAME,'없음') "상사"
    FROM EMP W, EMP M
    WHERE W.MGR(+)=M.EMPNO;
SELECT M.ENAME, M.JOB, M.DEPTNO
    FROM EMP W, EMP M
    WHERE W.MGR(+)=M.EMPNO AND W.ENAME IS NULL;
    -- 이름, JOB, 부서코드를 출력(부하직원이 없는 직원)
SELECT D.DEPTNO, DNAME, ENAME FROM DEPT D, EMP E WHERE D.DEPTNO=E.DEPTNO(+);
SELECT NVL(ENAME,'無'), NVL(JOB, '無'), NVL(TO_CHAR(E.DEPTNO),'無'), DNAME
    FROM EMP E, DEPT D
    WHERE E.DEPTNO(+)=D.DEPTNO;
    -- 이름, 업무, 부서코드, 부서명(직원이 없는 부서명까지 출력)
--탄탄1.FORD의 매니저는 JONES입니다. (매니저가 없는 경우 이름대신 '무')
SELECT W.ENAME || '의 매니저는 '|| NVL(M.ENAME,'무') ||'입니다'
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO(+);
--탄탄2. 이름, 부서번호, 부서명을 출력(직원이 없는 40번 부서도 출력)
SELECT ENAME, D.DEPTNO, DNAME FROM EMP E, DEPT D WHERE E.DEPTNO(+)=D.DEPTNO;

-- ★ 셤 연습문제
--1. 이름, 직속상사
SELECT W.ENAME, M.ENAME FROM EMP W, EMP M WHERE W.MGR=M.EMPNO;

--2. 이름, 급여, 업무, 직속상사
SELECT W.ENAME, W.SAL, W.JOB, M.ENAME FROM EMP W, EMP M WHERE W.MGR=M.EMPNO;

--3. 이름, 급여, 업무, 직속상사. (상사가 없는 직원까지 전체 직원 다 출력. 
    --상사가 없을 시 “없음”으로 출력)
SELECT W.ENAME, W.SAL, W.JOB, NVL(M.ENAME,'없음') FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO(+);
    
--4. 이름, 급여, 부서명, 직속상사명
SELECT W.ENAME, W.SAL, DNAME, M.ENAME FROM EMP W, EMP M, DEPT D
    WHERE W.MGR=M.EMPNO AND W.DEPTNO=D.DEPTNO;
    
--5. 이름, 급여, 부서코드, 부서명, 근무지, 직속상사명, 
    --(상사가 없는 직원까지 전체 직원 다 출력)
SELECT W.ENAME, W.SAL, W.DEPTNO, DNAME, LOC, M.ENAME 
    FROM EMP W, EMP M, DEPT D
    WHERE W.MGR=M.EMPNO(+) AND W.DEPTNO=D.DEPTNO;
    
--6. 이름, 급여, 등급, 부서명, 직속상사명. 급여가 2000이상인 사람
SELECT W.ENAME, W.SAL, GRADE, DNAME, M.ENAME 
    FROM EMP W, EMP M, DEPT D, SALGRADE
    WHERE W.MGR=M.EMPNO AND W.DEPTNO=D.DEPTNO 
        AND W.SAL BETWEEN LOSAL AND HISAL AND W.SAL>=2000;
        
--7. 이름, 급여, 등급, 부서명, 직속상사명, (직속상사가 없는 직원까지 전체직원 부서명순 정렬)
SELECT W.ENAME, W.SAL, GRADE, DNAME, M.ENAME 
    FROM EMP W, EMP M, DEPT D, SALGRADE
    WHERE W.MGR=M.EMPNO(+) AND W.DEPTNO=D.DEPTNO 
        AND W.SAL BETWEEN LOSAL AND HISAL
    ORDER BY DNAME;
        
--8. 이름, 급여, 등급, 부서명, 연봉, 직속상사명. 연봉=(급여+comm)*12 
SELECT W.ENAME, W.SAL, GRADE, DNAME, (W.SAL+NVL(W.COMM,0))*12 연봉, M.ENAME 
    FROM EMP W, EMP M, DEPT D, SALGRADE
    WHERE W.MGR=M.EMPNO AND W.DEPTNO=D.DEPTNO 
        AND W.SAL BETWEEN LOSAL AND HISAL;
        
--9. 8번을 부서명 순 부서가 같으면 급여가 큰 순 정렬
SELECT W.ENAME, W.SAL, GRADE, DNAME, (W.SAL+NVL(W.COMM,0))*12 연봉, M.ENAME 
    FROM EMP W, EMP M, DEPT D, SALGRADE
    WHERE W.MGR=M.EMPNO AND W.DEPTNO=D.DEPTNO 
        AND W.SAL BETWEEN LOSAL AND HISAL
    ORDER BY DNAME, SAL DESC;

--1. 모든 사원에 대한 이름,부서번호,부서명을 출력하는 SELECT 문장을 작성하여라.
SELECT ENAME, E.DEPTNO, DNAME FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO;

--2. NEW YORK에서 근무하고 있는 사원에 대하여 이름,업무,급여,부서명을 출력
SELECT ENAME, JOB, SAL, DNAME FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND LOC='NEW YORK';
    
--3. EMP 테이블에서 보너스(COMM)를 받는 사원에 대하여 이름,부서명,위치를 출력
SELECT ENAME, DNAME, LOC FROM EMP E, DEPT D 
    WHERE E.DEPTNO=D.DEPTNO AND COMM IS NOT NULL AND COMM <>0;
    
--4. EMP 테이블에서 이름 중 L자가 있는 사원에 대하여 이름,업무,부서명,위치를 출력
SELECT ENAME, JOB, DNAME, LOC FROM EMP E, DEPT D 
    WHERE E.DEPTNO=D.DEPTNO AND ENAME LIKE '%L%';
    
--5. 사번, 사원명, 부서코드, 부서명을 검색하라. 사원명기준으로 오름차순정열
SELECT EMPNO, ENAME, E.DEPTNO, DNAME FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO ORDER BY EMPNO ASC;
    
--6. 사번, 사원명, 급여, 부서명을 검색하라. 
    --단 급여가 2000이상인 사원에 대하여 급여를 기준으로 내림차순정렬
SELECT EMPNO, ENAME, SAL, DNAME FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND SAL>=2000 
    ORDER BY SAL DESC;
    
--7. 사번, 사원명, 업무, 급여, 부서명을 출력. 
    --단 업무가 MANAGER이며 급여가 2500이상인 사원에 대하여 사번을 기준 오름차순으로 정열
SELECT EMPNO, ENAME, JOB, SAL, DNAME FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND JOB='MANAGER' AND SAL>=2500
    ORDER BY EMPNO;
    
--8. 사번, 사원명, 업무, 급여, 등급을 검색하시오. 
    --등급은 급여가 하한값과 상한값 범위에 포함되고 급여기준 내림차순으로 정열하시오
SELECT EMPNO, ENAME, JOB, SAL, GRADE
    FROM EMP, SALGRADE
    WHERE SAL BETWEEN LOSAL AND HISAL
    ORDER BY SAL DESC;
    
--9. 사원테이블에서 사원명, 사원의 상사를 검색하시오(상사가 없는 직원까지 전체)
SELECT W.ENAME, M.ENAME
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO(+);

--10. 사원명, 상사명, 상사의 상사명을 검색하시오
SELECT W.ENAME, M.ENAME, MM.ENAME
    FROM EMP W, EMP M, EMP MM
    WHERE W.MGR=M.EMPNO AND M.MGR=MM.EMPNO;

--11. 위의 결과에서 상위 상사가 없는 모든 직원의 이름도 출력되도록 수정하시오
SELECT W.ENAME, M.ENAME, MM.ENAME
    FROM EMP W, EMP M, EMP MM
    WHERE W.MGR=M.EMPNO(+) AND M.MGR=MM.EMPNO(+);







