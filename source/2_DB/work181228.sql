-- pt1
--1 MY_DATA 테이블 생성
CREATE TABLE MY_DATA (
    ID NUMBER(4),
    NAME VARCHAR2(10),
    USERID VARCHAR2(30),
    SALARY NUMBER(10,2),
    PRIMARY KEY(ID));
--2.
INSERT INTO MY_DATA (ID,NAME, USERID, SALARY)
    VALUES (1, 'Scott','sscott',TO_NUMBER('10,000.00','99,999.99'));
INSERT INTO MY_DATA (ID,NAME, USERID, SALARY)
    VALUES (2, 'Ford','fford',TO_NUMBER('13,000.00','99,999.99'));
INSERT INTO MY_DATA 
    VALUES (3, 'Patel','ppatel',TO_NUMBER('33,000.00','99,999.99'));
INSERT INTO MY_DATA 
    VALUES (4, 'Report','rreport',TO_NUMBER('23,500.00','99,999.99'));
INSERT INTO MY_DATA 
    VALUES (5, 'Good','ggood',TO_NUMBER('44,450.00','99,999.99'));
--3. 자료 확인
SELECT * FROM MY_DATA;
--4. 자료를 DB에 등록반영
COMMIT;
--6. ID가 3인 사람의 급여를 65,000.00으로 갱신. DB에 반영
UPDATE MY_DATA SET SALARY = TO_NUMBER('65,000.00','99,999.99') WHERE ID=3;
COMMIT;
--7. 이름이 Ford인 사원을 영구 제명
DELETE FROM MY_DATA WHERE INITCAP(NAME)='Ford';
COMMIT;
--8. 급여가 15,000이하인 사원들은 급여를 15,000로
UPDATE MY_DATA SET SALARY=TO_NUMBER('15,000','99,999') 
    WHERE SALARY<=TO_NUMBER('15,000','99,999');
--9. 테이블 삭제
DROP TABLE MY_DATA;

-- pt4 (ERD포함)
DROP TABLE BOOK;
DROP TABLE BOOKKIND;
CREATE TABLE BOOKKIND(
    BOOKCODE VARCHAR2(3),
    BOOKKIND VARCHAR2(20),
    LOC      VARCHAR2(50),
    PRIMARY KEY(BOOKCODE));
CREATE TABLE BOOK(
    BOOKCODE VARCHAR2(3),
    BOOKID   VARCHAR2(10),
    BOOKNAME VARCHAR2(100),
    PUBLISHER VARCHAR2(100),
    PUBYEAR   NUMBER(4),
    PRIMARY KEY(BOOKID),
    FOREIGN KEY(BOOKCODE) REFERENCES BOOKKIND(BOOKCODE));
INSERT INTO BOOKKIND VALUES ('100','철학','3층 인문실');
INSERT INTO BOOKKIND VALUES ('200','인문','3층 인문실');
INSERT INTO BOOKKIND VALUES ('300','자연과학','4층 과학실');
INSERT INTO BOOKKIND VALUES ('400','IT','4층 과학실');
INSERT INTO BOOK (BOOKCODE, BOOKID, BOOKNAME, PUBLISHER, PUBYEAR)
    VALUES ('100','100A01','철학자의 삶','더존출판',2017);
INSERT INTO BOOK 
    VALUES ('400','400A01','이것이 자바다','더존출판',2018);
SELECT * FROM BOOKKIND;
SELECT * FROM BOOK;
-- pt5 (ERD포함)
DROP TABLE STUDENT;
DROP TABLE MAJOR;
CREATE TABLE MAJOR(
    MAJOR_CODE NUMBER(1) PRIMARY KEY,
    MAJOR_NAME VARCHAR2(30) UNIQUE,
    OFFICE_LOC VARCHAR2(50));
CREATE TABLE STUDENT(
    HAKBUN VARCHAR2(3) PRIMARY KEY,
    NAME VARCHAR2(50) NOT NULL,
    SCORE NUMBER(3) CHECK(SCORE>=0),
    MAJOR_CODE NUMBER(1) REFERENCES MAJOR(MAJOR_CODE));
-- 데이터 입력
INSERT INTO MAJOR VALUES (1, '경영정보', '3층 인문실');
INSERT INTO MAJOR VALUES (2, '소프트웨어공학', '3층 인문실');
INSERT INTO MAJOR VALUES (3, '디자인', '3층 인문실');
INSERT INTO MAJOR VALUES (4, '경제', '3층 인문실');
INSERT INTO STUDENT VALUES ('A01','김길동',100,1);
INSERT INTO STUDENT VALUES ('A02','문길동',90,2);
INSERT INTO STUDENT VALUES ('A03','홍길동',95,1);
SELECT * FROM MAJOR;
SELECT * FROM STUDENT;
-- pt6 (ERD포함) - 쇼핑몰 ERD
DROP TABLE ORDERDETAIL;
DROP TABLE ORDERS;
DROP TABLE CART;
DROP TABLE MEMBER;
DROP TABLE PRODUCT;
CREATE TABLE MEMBER(
    mNO VARCHAR2(10) PRIMARY KEY,
    mNAME VARCHAR2(50),
    mADDR VARCHAR2(255),
    mTEL VARCHAR2(30),
    mMAIL VARCHAR2(40));
CREATE TABLE PRODUCT(
    pCODE VARCHAR2(5),
    pNAME VARCHAR2(50),
    pPRICE NUMBER(9),
    pSTOCK NUMBER(3),
    PRIMARY KEY(pCODE));
CREATE TABLE CART(
    cNO NUMBER(4) PRIMARY KEY,
    mNO VARCHAR2(10) REFERENCES MEMBER(mNO),
    pCODE VARCHAR2(5) REFERENCES PRODUCT(pCODE),
    QTY NUMBER(3),
    COST NUMBER(9));
DROP SEQUENCE CART_SEQ;
CREATE SEQUENCE CART_SEQ MAXVALUE 9999 NOCYCLE NOCACHE;
CREATE TABLE ORDERS(
    oNO NUMBER,
    mNO VARCHAR2(10),
    oADDR VARCHAR2(255),
    oTEL VARCHAR2(30),
    oDATE DATE,
    PRIMARY KEY(oNO),
    FOREIGN KEY(mNO) REFERENCES MEMBER(mNO));
CREATE TABLE ORDERDETAIL(
    odNO NUMBER(4) PRIMARY KEY,
    oNO NUMBER REFERENCES ORDERS(oNO),
    pCODE VARCHAR2(5) REFERENCES PRODUCT(pCODE),
    QTY NUMBER(3),
    COST NUMBER(9));
DROP SEQUENCE ORDERDETAIL_SEQ;
CREATE SEQUENCE ORDERDETAIL_SEQ MAXVALUE 9999 NOCYCLE NOCACHE;








